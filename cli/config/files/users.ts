import { ensureFile, exists as exists_, join } from "../../deps.ts";
import { readJson, writeJson } from "../../utilities/json.ts";
import { PATH as DIR_PATH } from "./nest.ts";
import { envHOMEDIR } from "../../utilities/env.ts";
import { assertUserManager } from "../parse/user-manager.ts";
import type { Json, UserManager } from "../../utilities/types.ts";

export const FILE = "users.json";
export const PATH = join(envHOMEDIR(), DIR_PATH, FILE);

/** Test whether or not the users file exists by checking with the file system */
export function exists(): Promise<boolean> {
  return exists_(PATH);
}

/** Ensures that the users file exists. */
export async function ensure(): Promise<void> {
  await ensureFile(PATH);
}

/** Reads the users file. */
export function read(): Promise<string> {
  return Deno.readTextFile(PATH);
}

/** Reads and parses the users file. */
export async function parse(path = PATH): Promise<UserManager> {
  const json = await readJson(path) as Json;

  return assertUserManager(json, FILE);
}

/** Writes a user object to the users file. */
export async function write(
  content: UserManager,
  path = PATH,
) {
  await writeJson(path, {
    $comment: "THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.",
    ...content,
  }, { spaces: 2 });
}
