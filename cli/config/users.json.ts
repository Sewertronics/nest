import { ensureFile, exists, join } from "../deps.ts";
import { readJson, writeJson } from "../utilities/json.ts";
import { NEST_DIRECTORY } from "./nest.ts";
import { envHOMEDIR } from "../utilities/env.ts";
import { assertUserManager } from "./parse/user-manager.ts";
import type { Json, UserManager } from "../utilities/types.ts";

export const USERS_FILE = "users.json";
export const USERS_PATH = join(envHOMEDIR(), NEST_DIRECTORY, USERS_FILE);

/** Test whether or not the `users.json` file exists by checking with the file system */
export function usersJsonExists(): Promise<boolean> {
  return exists(USERS_PATH);
}

/** Ensures that the `users.json` file exists. */
export async function ensureUsersJson(): Promise<void> {
  await ensureFile(USERS_PATH);
}

/** Reads the `users.json` file. */
export function readUsersJson(): Promise<string> {
  return Deno.readTextFile(USERS_PATH);
}

/** Reads and parses the `users.json` file. */
export async function parseUsersJson(path = USERS_PATH): Promise<UserManager> {
  const json = await readJson(path) as Json;

  return assertUserManager(json, USERS_FILE);
}

export async function writeUsersJson(
  content: UserManager,
  path = USERS_PATH,
) {
  await writeJson(path, {
    $comment: "THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.",
    ...content,
  }, { spaces: 2 });
}
